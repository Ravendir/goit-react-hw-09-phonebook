{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/PagesStyle.module.css","components/contactForm/ContactFormStyles.module.css","components/contactList/ContactListStyles.module.css","components/filter/FilterStyle.module.css","redux/selector.js","redux/operations.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","pages/ContactsPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","contactsFilterSelector","state","contacts","filter","contactsItemsSelector","items","filteredItemsSelector","createSelector","item","name","toLowerCase","includes","trim","BASE_URL","initialState","number","ContactForm","useState","setState","useSelector","dispatch","useDispatch","useEffect","getState","a","token","auth","getAllContactsRequest","axios","defaults","headers","Authorization","get","data","getAllContactsSuccess","getAllContactsError","handleSubmit","contact","some","alert","addNewContactsRequest","post","addNewContactsSuccess","addNewContactsError","handleChange","evt","prev","target","className","styles","form","onSubmit","preventDefault","label","formInput","type","onChange","placeholder","pattern","title","required","formButton","ContactList","handleDelete","id","removeContactsRequest","delete","removeContactsSuccess","removeContactsError","removeContacts","map","onClick","Filter","filterContainer","filterInput","filterChange","ContactsPage","contactPageHeading"],"mappings":"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","file":"static/js/3.3fb2b8ba.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePageHeading\":\"PagesStyle_homePageHeading__1yraf\",\"contactPageHeading\":\"PagesStyle_contactPageHeading__2VCSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFormStyles_label__1UUCV\",\"form\":\"ContactFormStyles_form__1z8jj\",\"formInput\":\"ContactFormStyles_formInput__1gLhf\",\"formButton\":\"ContactFormStyles_formButton__odFsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactListStyles_list__o03v3\",\"contacts\":\"ContactListStyles_contacts__3A0Zz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"FilterStyle_filterContainer__1iVDo\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const loadingSelector = (state) => state.contacts.loading;\r\nexport const contactsFilterSelector = (state) => state.contacts.filter;\r\nexport const contactsItemsSelector = (state) => state.contacts.items;\r\n\r\nexport const filteredItemsSelector = createSelector(\r\n  [contactsItemsSelector, contactsFilterSelector],\r\n  (items, filter) =>\r\n    items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n    )\r\n);\r\n","import axios from \"axios\";\r\nimport {\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./actions\";\r\n\r\nconst BASE_URL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst addNewContacts = (contact) => async (dispatch, getState) => {\r\n  const token = getState().auth.token;\r\n  dispatch(addNewContactsRequest());\r\n  try {\r\n    axios.defaults.headers.Authorization = `Bearer ${token}`;\r\n    const { data } = await axios.post(`${BASE_URL}/contacts`, contact);\r\n    dispatch(addNewContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addNewContactsError(error));\r\n  }\r\n};\r\n\r\nconst getAllContacts = () => async (dispatch, getState) => {\r\n  const token = getState().auth.token;\r\n  dispatch(getAllContactsRequest());\r\n  try {\r\n    axios.defaults.headers.Authorization = `Bearer ${token}`;\r\n    const { data } = await axios.get(`${BASE_URL}/contacts`);\r\n    dispatch(getAllContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getAllContactsError(error));\r\n  }\r\n};\r\n\r\nconst removeContacts = (id) => async (dispatch, getState) => {\r\n  const token = getState().auth.token;\r\n  dispatch(removeContactsRequest());\r\n  try {\r\n    axios.defaults.headers.Authorization = `Bearer ${token}`;\r\n    await axios.delete(`${BASE_URL}/contacts/${id}`);\r\n    dispatch(removeContactsSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactsError(error));\r\n  }\r\n};\r\n\r\nexport { addNewContacts, getAllContacts, removeContacts };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ContactFormStyles.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsItemsSelector } from \"../../redux/selector\";\r\nimport { addNewContacts, getAllContacts } from \"../../redux/operations\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const { items } = useSelector((state) => {\r\n    return {\r\n      items: contactsItemsSelector(state),\r\n    };\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllContacts());\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = (name, number) => {\r\n    const isDuplicate = items.some((item) => item.name === name);\r\n\r\n    if (isDuplicate) {\r\n      alert(name + \" is already in contacts \");\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    dispatch(addNewContacts(newContact));\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    setState((prev) => ({ ...prev, [evt.target.name]: evt.target.value }));\r\n  };\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    handleSubmit(state.name, state.number);\r\n    setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={onSubmit}>\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          value={state.name}\r\n          placeholder=\"Enter your name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.formInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          onChange={handleChange}\r\n          value={state.number}\r\n          placeholder=\"123-45-67\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={styles.formButton}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filteredItemsSelector } from \"../../redux/selector\";\r\nimport { removeContacts } from \"../../redux/operations\";\r\nimport { styles } from \"./ContactListStyles.module.css\";\r\n\r\nconst ContactList = () => {\r\n  const items = useSelector(filteredItemsSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = (id) => dispatch(removeContacts(id));\r\n  return (\r\n    <ul>\r\n      {items.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button type=\"button\" onClick={() => handleDelete(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport styles from \"./FilterStyle.module.css\";\r\nimport { filterChange } from \"../../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsFilterSelector } from \"../../redux/selector\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(contactsFilterSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (value) => dispatch(filterChange(value));\r\n  const onChange = (evt) => {\r\n    handleChange(evt.target.value);\r\n  };\r\n  return (\r\n    <div className={styles.filterContainer}>\r\n      <h2>Find contacts by name</h2>\r\n      <input\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        className={styles.filterInput}\r\n        onChange={onChange}\r\n        value={filter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport ContactForm from \"../components/contactForm/ContactForm\";\r\nimport ContactList from \"../components/contactList/ContactList\";\r\nimport Filter from \"../components/filter/Filter\";\r\nimport styles from \"./PagesStyle.module.css\";\r\n\r\nconst ContactsPage = () => {\r\n  return (\r\n    <div>\r\n      <h1 className={styles.contactPageHeading}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.contactPageHeading}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}