{"version":3,"sources":["redux/auth/authOperation.js","components/navBar/NavBarStyles.module.css","redux/auth/authAction.js","redux/auth/authSelectors.js","components/navBar/NavBar.js","routes/MainRoutes.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/App.js","redux/reducer.js","redux/auth/authReducer.js","redux/store.js","index.js","redux/actions.js"],"names":["BASE_URL","token","axios","defaults","headers","common","Authorization","registerOperation","credentials","dispatch","a","registerRequest","post","response","registerSuccess","data","registerError","massage","loginOperation","loginRequest","loginSuccess","loginError","logoutOperation","getState","auth","logoutRequest","logoutSuccess","window","location","reload","logoutError","getCurrentUser","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","message","module","exports","createAction","getIsAuthenticated","state","getUsername","user","name","mapDispatchToProps","connect","ownProps","IsAuthenticated","className","styles","ul","to","src","alt","defAvatar","span","type","onClick","exact","mainRoutes","path","component","lazy","isPrivate","isRestricted","PrivateRoute","MyComponent","isAuth","render","props","PublicRoute","App","this","fallback","map","route","key","Component","withRouter","loading","createReducer","getAllContactsRequest","getAllContactsSuccess","getAllContactsError","addNewContactsRequest","addNewContactsSuccess","addNewContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","items","_","action","payload","filter","item","id","filterChange","mainReducer","combineReducers","initialsUserState","email","error","authReducer","persistConfig","storage","whitelist","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","PURGE","PERSIST","REGISTER","REHYDRATE","PAUSE","FLUSH","reducer","persistReducer","contacts","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b855070e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  logoutError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n} from \"./authAction\";\r\n\r\nconst BASE_URL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n};\r\n\r\nexport const registerOperation = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/users/signup`, credentials);\r\n\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.massage));\r\n  }\r\n};\r\n\r\nexport const loginOperation = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/users/login`, credentials);\r\n\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.massage));\r\n  }\r\n};\r\n\r\nexport const logoutOperation = () => async (dispatch, getState) => {\r\n  const token = getState().auth.token;\r\n  dispatch(logoutRequest());\r\n  try {\r\n    axios.defaults.headers.Authorization = `Bearer ${token}`;\r\n    await axios.post(`${BASE_URL}/users/logout`);\r\n    dispatch(logoutSuccess());\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch(logoutError(error.massage));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/users/current`);\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"NavBarStyles_ul__C0vul\",\"span\":\"NavBarStyles_span__2XE2t\",\"defAvatar\":\"NavBarStyles_defAvatar__1f_8u\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"contacts/registerRequest\");\r\nconst registerSuccess = createAction(\"contacts/registerSuccess\");\r\nconst registerError = createAction(\"contacts/registerError\");\r\n\r\nconst loginRequest = createAction(\"contacts/loginRequest\");\r\nconst loginSuccess = createAction(\"contacts/loginSuccess\");\r\nconst loginError = createAction(\"contacts/loginError\");\r\n\r\nconst logoutRequest = createAction(\"contacts/logoutRequest\");\r\nconst logoutSuccess = createAction(\"contacts/logoutSuccess\");\r\nconst logoutError = createAction(\"contacts/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"contacts/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"contacts/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"contacts/getCurrentUserError\");\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","export const getIsAuthenticated = (state) => state.auth.token;\r\n\r\nexport const getUsername = (state) => state.auth.user.name;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logoutOperation } from \"../../redux/auth/authOperation\";\r\nimport {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n} from \"../../redux/auth/authSelectors\";\r\nimport styles from \"./NavBarStyles.module.css\";\r\n\r\nconst NavBar = ({ IsAuthenticated, logoutOperation, name }) => {\r\n  return (\r\n    <nav>\r\n      <ul className={styles.ul}>\r\n        {IsAuthenticated ? (\r\n          <>\r\n            {\" \"}\r\n            <li>\r\n              <NavLink to=\"/\">HomePage</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/contacts\">ContactsPage</NavLink>\r\n            </li>\r\n            <li>\r\n              <img\r\n                src=\"https://pngimg.com/uploads/face/face_PNG5645.png\"\r\n                alt=\"face\"\r\n                className={styles.defAvatar}\r\n              />\r\n              <span className={styles.span}>Welcome, {name}</span>\r\n              <button type=\"button\" onClick={logoutOperation}>\r\n                Logout\r\n              </button>\r\n            </li>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                HomePage\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/register\">RegisterPage</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/login\">LoginPage</NavLink>\r\n            </li>{\" \"}\r\n          </>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  IsAuthenticated: getIsAuthenticated(state),\r\n  name: getUsername(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logoutOperation,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import { lazy } from \"react\";\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    name: \"HomePage\",\r\n    path: \"/\",\r\n    component: lazy(() => import(\"../pages/HomePage\")),\r\n    exact: true,\r\n    isPrivate: false,\r\n    isRestricted: false,\r\n  },\r\n  {\r\n    name: \"ContactsPage\",\r\n    path: \"/contacts\",\r\n    component: lazy(() => import(\"../pages/ContactsPage\")),\r\n    exact: false,\r\n    isPrivate: true,\r\n    isRestricted: false,\r\n  },\r\n  {\r\n    name: \"LoginPage\",\r\n    path: \"/login\",\r\n    component: lazy(() => import(\"../pages/LoginPage\")),\r\n    exact: true,\r\n    isPrivate: false,\r\n    isRestricted: true,\r\n  },\r\n  {\r\n    name: \"RegisterPage\",\r\n    path: \"/register\",\r\n    component: lazy(() => import(\"../pages/RegisterPage\")),\r\n    exact: true,\r\n    isPrivate: false,\r\n    isRestricted: true,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ exact, path, component: MyComponent, isAuth }) => {\r\n  return !isAuth ? (\r\n    <Redirect to=\"/login\" />\r\n  ) : (\r\n    <Route\r\n      path={path}\r\n      exact={exact}\r\n      render={(props) => <MyComponent {...props} />}\r\n      key={path}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PublicRoute({\r\n  exact,\r\n  path,\r\n  isAuth,\r\n  component: MyComponent,\r\n  isRestricted,\r\n}) {\r\n  return isAuth && isRestricted ? (\r\n    <Redirect to=\"/contacts\" />\r\n  ) : (\r\n    <Route\r\n      path={path}\r\n      exact={exact}\r\n      render={(props) => <MyComponent {...props} />}\r\n      key={path}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PublicRoute;\r\n","import React, { Suspense, Component } from \"react\";\r\nimport { Switch, withRouter } from \"react-router-dom\";\r\nimport NavBar from \"./navBar/NavBar\";\r\nimport { mainRoutes } from \"../routes/MainRoutes\";\r\nimport PrivateRoute from \"../routes/PrivateRoute\";\r\nimport PublicRoute from \"../routes/PublicRoute\";\r\nimport { getIsAuthenticated } from \"../redux/auth/authSelectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentUser } from \"../redux/auth/authOperation\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <Suspense fallback={<h2>...loading</h2>}>\r\n          <Switch>\r\n            {mainRoutes.map((route) =>\r\n              route.isPrivate ? (\r\n                <PrivateRoute\r\n                  {...route}\r\n                  isAuth={this.props.isAuth}\r\n                  key={route.path}\r\n                />\r\n              ) : (\r\n                <PublicRoute\r\n                  {...route}\r\n                  isAuth={this.props.isAuth}\r\n                  key={route.path}\r\n                />\r\n              )\r\n            )}\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentUser,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  isAuth: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  filterChange,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./actions\";\r\n\r\nconst loading = createReducer(false, {\r\n  [getAllContactsRequest]: () => true,\r\n  [getAllContactsSuccess]: () => false,\r\n  [getAllContactsError]: () => false,\r\n  [addNewContactsRequest]: () => true,\r\n  [addNewContactsSuccess]: () => false,\r\n  [addNewContactsError]: () => false,\r\n  [removeContactsRequest]: () => true,\r\n  [removeContactsSuccess]: () => false,\r\n  [removeContactsError]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [getAllContactsSuccess]: (_, action) => action.payload,\r\n  [addNewContactsSuccess]: (state, action) => [action.payload, ...state],\r\n  [removeContactsSuccess]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterChange]: (_, action) => action.payload,\r\n});\r\n\r\nconst mainReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default mainReducer;\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginSuccess,\r\n  logoutError,\r\n  logoutSuccess,\r\n  registerError,\r\n  registerSuccess,\r\n} from \"./authAction\";\r\n\r\nconst initialsUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialsUserState, {\r\n  [registerSuccess]: (state, { payload }) => payload.user,\r\n  [loginSuccess]: (state, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialsUserState,\r\n  [getCurrentUserSuccess]: (state, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (state, { payload }) => payload.token,\r\n  [loginSuccess]: (state, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (state, { payload }) => payload,\r\n  [loginError]: (state, { payload }) => payload,\r\n  [logoutError]: () => null,\r\n  [getCurrentUserError]: (state, { payload }) => payload,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n\r\nexport default authReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport mainReducer from \"./reducer\";\r\nimport authReducer from \"./auth/authReducer\";\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  PERSIST,\r\n  REGISTER,\r\n  PAUSE,\r\n  PURGE,\r\n  FLUSH,\r\n  REHYDRATE,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  middleware: [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [PURGE, PERSIST, REGISTER, REHYDRATE, PAUSE, FLUSH],\r\n      },\r\n    }),\r\n  ],\r\n  reducer: {\r\n    auth: persistReducer(persistConfig, authReducer),\r\n    contacts: mainReducer,\r\n  },\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport styles from \"./indexStyles.module.css\";\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewContactsRequest = createAction(\"contacts/addNewContactsRequest\");\r\nconst addNewContactsSuccess = createAction(\"contacts/addNewContactsSuccess\");\r\nconst addNewContactsError = createAction(\"contacts/addNewContactsError\");\r\n\r\nconst getAllContactsRequest = createAction(\"contacts/getAllContactsRequest\");\r\nconst getAllContactsSuccess = createAction(\"contacts/getAllContactsSuccess\");\r\nconst getAllContactsError = createAction(\"contacts/getAllContactsError\");\r\n\r\nconst filterChange = createAction(\"contacts/filterChange\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeContactsRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeContactsSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeContactsError\");\r\n\r\nexport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  filterChange,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n};\r\n"],"sourceRoot":""}