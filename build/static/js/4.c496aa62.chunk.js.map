{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/AuthForm.js","components/AuthFormStyles.module.css","pages/LoginPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","initialState","name","email","password","AuthForm","useState","state","setState","location","useLocation","dispatch","useDispatch","onHandleChage","e","target","prev","className","styles","authForm","onSubmit","preventDefault","pathname","registerOperation","loginOperation","type","onChange","module","exports","LoginPage"],"mappings":"2LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iHIChGC,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IA8DGC,IA3DE,WACf,MAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEMC,EAAWC,cACXC,EAAWC,cAEXC,EAAgB,SAACC,GACrB,MAAwBA,EAAEC,OAAlBb,EAAR,EAAQA,KAAMN,EAAd,EAAcA,MACdY,GAAS,SAACQ,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBd,EAAON,QAazC,OACE,uBAAMqB,UAAWC,IAAOC,SAAUC,SAXb,SAACN,GACtBA,EAAEO,iBAEoB,cAAtBZ,EAASa,SACLX,EAASY,YAAkBhB,IAC3BI,EAASa,YAAejB,IAE5BC,EAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAI1C,UACyB,cAAtBK,EAASa,UACR,yCAEE,uBACEG,KAAK,OACLvB,KAAK,OACLN,MAAOW,EAAML,KACbwB,SAAUb,OAIhB,0CAEE,uBACEY,KAAK,OACLvB,KAAK,QACLN,MAAOW,EAAMJ,MACbuB,SAAUb,OAGd,6CAEE,uBACEY,KAAK,OACLvB,KAAK,WACLN,MAAOW,EAAMH,SACbsB,SAAUb,OAGd,wBAAQY,KAAK,SAAb,SACyB,cAAtBhB,EAASa,SAA2B,WAAa,e,mBChE1DK,EAAOC,QAAU,CAAC,SAAW,mC,gCCD7B,+BAOeC,UAJG,WAChB,OAAO,cAAC,IAAD","file":"static/js/4.c496aa62.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { loginOperation, registerOperation } from \"../redux/auth/authOperation\";\r\nimport styles from \"./AuthFormStyles.module.css\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst AuthForm = () => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleChage = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    location.pathname === \"/register\"\r\n      ? dispatch(registerOperation(state))\r\n      : dispatch(loginOperation(state));\r\n\r\n    setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className={styles.authForm} onSubmit={onHandleSubmit}>\r\n      {location.pathname === \"/register\" && (\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            onChange={onHandleChage}\r\n          />\r\n        </label>\r\n      )}\r\n      <label>\r\n        Email\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={state.email}\r\n          onChange={onHandleChage}\r\n        />\r\n      </label>\r\n      <label>\r\n        Password\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={state.password}\r\n          onChange={onHandleChage}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">\r\n        {location.pathname === \"/register\" ? \"register\" : \"login\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authForm\":\"AuthFormStyles_authForm__3GitO\"};","import React from \"react\";\r\nimport AuthForm from \"../components/AuthForm\";\r\n\r\nconst LoginPage = () => {\r\n  return <AuthForm />;\r\n};\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}